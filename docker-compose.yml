version: '3.8'

services:
  traefik:
    image: traefik:v2.10
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.file=true"
      - "--providers.file.directory=/etc/traefik/config"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.websecure.http.tls=true"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - ./traefik/certs:/etc/traefik/certs
      - ./traefik/config:/etc/traefik/config
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - event-driven-net
    depends_on:
      - event-service

  rabbitmq:
    image: rabbitmq:management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - event-driven-net
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "-q", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.rabbitmq.rule=Host(`rabbitmq.dev.localhost`)"
      - "traefik.http.routers.rabbitmq.entrypoints=websecure"
      - "traefik.http.routers.rabbitmq.tls=true"
      - "traefik.http.services.rabbitmq.loadbalancer.server.port=15672"

  event-service:
    build:
      context: ./event-service
      dockerfile: Dockerfile
    environment:
      RABBITMQ_URI: amqp://guest:guest@rabbitmq:5672
      NODE_ENV: development
    volumes:
      - type: bind
        source: ./event-service
        target: /usr/src/app
      - type: volume
        source: user_node_modules
        target: /usr/src/app/node_modules
    networks:
      - event-driven-net
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.event-service.rule=Host(`event-service.dev.localhost`)"
      - "traefik.http.routers.event-service.entrypoints=websecure"
      - "traefik.http.routers.event-service.tls=true"
      - "traefik.http.services.event-service.loadbalancer.server.port=3000"
    depends_on:
      rabbitmq:
        condition: service_healthy

  email-service:
    build:
      context: ./email-service
      dockerfile: Dockerfile
    environment:
      RABBITMQ_URI: amqp://guest:guest@rabbitmq:5672
      NODE_ENV: development
      PORT: 3001
    volumes:
      - type: bind
        source: ./email-service
        target: /usr/src/app
      - type: volume
        source: email_node_modules
        target: /usr/src/app/node_modules
    networks:
      - event-driven-net
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.email-service.rule=Host(`email-service.dev.localhost`)"
      - "traefik.http.routers.email-service.entrypoints=websecure"
      - "traefik.http.routers.email-service.tls=true"
      - "traefik.http.services.email-service.loadbalancer.server.port=3001"
    depends_on:
      rabbitmq:
        condition: service_healthy

  monitor-service:
    build:
      context: ./monitor-service
      dockerfile: Dockerfile
    environment:
      RABBITMQ_URI: amqp://guest:guest@rabbitmq:5672
      NODE_ENV: development
      PORT: 3002
    volumes:
      - type: bind
        source: ./monitor-service
        target: /usr/src/app
      - type: volume
        source: monitor_node_modules
        target: /usr/src/app/node_modules
    networks:
      - event-driven-net
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.monitor-service.rule=Host(`monitor-service.dev.localhost`)"
      - "traefik.http.routers.monitor-service.entrypoints=websecure"
      - "traefik.http.routers.monitor-service.tls=true"
      - "traefik.http.services.monitor-service.loadbalancer.server.port=3002"
    depends_on:
      rabbitmq:
        condition: service_healthy

  monitor-frontend:
    build:
      context: ./monitor-frontend
      dockerfile: Dockerfile
    environment:
      NODE_ENV: development
      VITE_API_URL: https://monitor-service.dev.localhost
    volumes:
      - type: bind
        source: ./monitor-frontend
        target: /usr/src/app
      - type: volume
        source: monitor_frontend_node_modules
        target: /usr/src/app/node_modules
    networks:
      - event-driven-net
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.monitor-frontend.rule=Host(`monitor.dev.localhost`)"
      - "traefik.http.routers.monitor-frontend.entrypoints=websecure"
      - "traefik.http.routers.monitor-frontend.tls=true"
      - "traefik.http.services.monitor-frontend.loadbalancer.server.port=5173"
    depends_on:
      - monitor-service

volumes:
  rabbitmq_data:
  user_node_modules:
  email_node_modules:
  monitor_node_modules:
  monitor_frontend_node_modules:


networks:
  event-driven-net:
    driver: bridge
