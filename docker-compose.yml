version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - event-driven-net
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "-q", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 3

  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - event-driven-net
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 3

  node-app:
    build: .
    container_name: node-app
    ports:
      - "3000:3000"
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_USER=guest
      - RABBITMQ_PASS=guest
    depends_on:
      - rabbitmq
    networks:
      - event-driven-net

  user-service:
    image: node:18-alpine
    container_name: user-service
    working_dir: /app
    volumes:
      - ./user-service:/app
    command: >
      sh -c "npm install &&
             npm run build &&
             npm start"
    ports:
      - "3000:3000"
    environment:
      - MONGODB_URI=mongodb://mongodb:27017/user-service
      - RABBITMQ_URI=amqp://guest:guest@rabbitmq:5672
      - NODE_ENV=development
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    networks:
      - event-driven-net

volumes:
  rabbitmq_data:
  mongodb_data:


networks:
  event-driven-net:
    driver: bridge
